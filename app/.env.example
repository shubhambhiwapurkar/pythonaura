# -----------------------------------------------------------------------------
# Example Environment Variables for Local Development
#
# This file provides a template for the environment variables required to
# run the application. Copy this file to a new file named `.env` in the
# project root and replace the placeholder values with your actual credentials
# and settings.
#
# Note: The `.env` file is ignored by Git to prevent sensitive data from
# being committed to the repository.
# -----------------------------------------------------------------------------

# --- MongoDB Settings ---
# Connection string for your MongoDB database.
# For local development, this might look like:
# MONGODB_URI=mongodb://admin:adminpassword@localhost:27017/astrology?authSource=admin
# For production, use a secure connection string from your database provider.
MONGODB_URI=your_mongodb_connection_string_here

# --- JWT (JSON Web Token) Settings ---
# A strong, unique secret key for signing JWTs.
# You can generate a secure key using: openssl rand -hex 32
JWT_SECRET_KEY=your_strong_jwt_secret_here

# The algorithm used to sign the JWTs.
JWT_ALGORITHM=HS256

# The lifespan of an access token in minutes.
ACCESS_TOKEN_EXPIRE_MINUTES=30

# The lifespan of a refresh token in days.
REFRESH_TOKEN_EXPIRE_DAYS=7

# --- External API Keys ---
# Your API key for the Google Maps Geocoding service.
GOOGLE_MAPS_API_KEY=your_google_maps_api_key_here

# Your API key for the Google AI services.
GOOGLE_AI_API_KEY=your_google_ai_api_key_here

# --- Service URLs ---
# The URL for the astrology-service.
# When running with Docker Compose, this will be the service name.
# For local development, it will be the service's local address.
ASTROLOGY_SERVICE_URL=http://astrology-service:8001

# --- CORS (Cross-Origin Resource Sharing) Settings ---
# A JSON-formatted string of allowed frontend origins.
# Example: '["http://localhost:3000", "https://your-production-domain.com"]'
FRONTEND_CORS_ORIGINS='["http://localhost:3000"]'
